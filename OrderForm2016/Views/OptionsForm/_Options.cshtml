@model OrderForm2016.Models.BaseForm

@{
		List<SelectListItem> YesNoList = new List<SelectListItem>();
		YesNoList.Add(new SelectListItem
		{
				Text = "No",
				Value = "No",
				Selected = true
		});
		YesNoList.Add(new SelectListItem
		{
				Text = "Yes",
				Value = "Yes",
		});

}

<div class="table  alert  alert-info  well-sm" role="alert">
		<span class="cell"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i></span>
		<span class="cell">Submitting the new options will return you to the Quote Results details page.</span>
</div>


@using (Html.BeginForm("GetQuotes", "Home", new { @id = string.Empty }, FormMethod.Post))
{
		@Html.AntiForgeryToken()
		@Html.HiddenFor(m => m.base_form_id)
		@Html.HiddenFor(m => m.ProductName)
		@Html.HiddenFor(m => m.ProductDesc)
		@Html.HiddenFor(m => m.country)
		@Html.HiddenFor(m => m.destination)
		@Html.HiddenFor(m => m.eff_date)
		@Html.HiddenFor(m => m.term_date)
		@Html.HiddenFor(m => m.product_id)
		@Html.HiddenFor(m => m.TravelerAges)
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })


		<div class="form-group">
				@Html.LabelFor(m => m.travelOptions.plan, ViewData["planLabel"].ToString(), new { @class = "control-label" })
				@Html.DropDownListFor(m => m.travelOptions.plan, (SelectList)ViewBag.plan, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.travelOptions.plan, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.travelOptions.deductible, ViewData["deductibleLabel"].ToString(), new { @class = "control-label" })
				@Html.DropDownListFor(m => m.travelOptions.deductible, (SelectList)ViewBag.deductible, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.travelOptions.deductible, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.travelOptions.ad_d, ViewData["ad_dLabel"].ToString(), new { @class = "control-label" })
				@Html.DropDownListFor(m => m.travelOptions.ad_d, (SelectList)ViewBag.ad_d, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.travelOptions.ad_d, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.travelOptions.sports, ViewData["sportsLabel"].ToString(), new { @class = "control-label" })
				@Html.DropDownListFor(m => m.travelOptions.sports, (SelectList)ViewBag.sports, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.travelOptions.sports, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.travelOptions.extreme_sports, ViewData["extreme_sportsLabel"].ToString(), new { @class = "control-label" })
				@Html.DropDownListFor(m => m.travelOptions.extreme_sports, @YesNoList, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.travelOptions.extreme_sports, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.travelOptions.home_country, ViewData["home_countryLabel"].ToString(), new { @class = "control-label" })
				@Html.DropDownListFor(m => m.travelOptions.home_country, @YesNoList, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.travelOptions.home_country, "", new { @class = "text-danger" })
		</div>

		<div class="form-submit">
				<button type="submit" name="direction" value="next" class="btn  btn-primary">Update</button>
		</div>

}


@section Scripts {
		<script src="/scripts/main.js"></script>
}
